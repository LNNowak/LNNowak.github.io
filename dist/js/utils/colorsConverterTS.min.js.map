{"version":3,"sources":["utils/colorsConverterTS.js"],"names":["app","ColorsString","Commons","ColorConverterCtrl","$scope","Colors","rgbToHex","red","green","blue","toString","slice","hexToRgb","hex","shorthandRegex","replace","m","r","g","b","result","exec","parseInt","rgbStringToHex","str","splitResult","split","hexStringToRgbString","temp","$watch","RGB","newValue","oldValue","HEX","$inject","angular","module","controller"],"mappings":"AAEA,GAAIA,MACJ,SAAWA,GACP,YACA,IAAIC,GAAeC,QAAQD,aACvBE,EAAsB,WACtB,QAASA,GAAmBC,GACxBA,EAAOC,OAAS,GAAIJ,GAAa,UAAW,cAC5CG,EAAOE,SAAW,SAAUC,EAAKC,EAAOC,GACpC,MAAO,MAAQ,GAAK,KAAOF,GAAO,KAAOC,GAAS,GAAKC,GAAMC,SAAS,IAAIC,MAAM,IAEpFP,EAAOQ,SAAW,SAAUC,GACxB,GAAIC,GAAiB,kCACrBD,GAAMA,EAAIE,QAAQD,EAAgB,SAAUE,EAAGC,EAAGC,EAAGC,GACjD,MAAOF,GAAIA,EAAIC,EAAIA,EAAIC,EAAIA,GAE/B,IAAIC,GAAS,4CAA4CC,KAAKR,EAC9D,OAAOO,IACHH,EAAGK,SAASF,EAAO,GAAI,IACvBF,EAAGI,SAASF,EAAO,GAAI,IACvBD,EAAGG,SAASF,EAAO,GAAI,KACvB,MAERhB,EAAOmB,eAAiB,SAAUC,GAC9B,GAAIC,GAAcD,EAAIb,MAAM,EAAG,IAAIe,MAAM,KAAK,GAAGA,MAAM,IACvD,OAAOtB,GAAOE,SAASgB,SAASG,EAAY,IAAKH,SAASG,EAAY,IAAKH,SAASG,EAAY,MAEpGrB,EAAOuB,qBAAuB,SAAUH,GACpC,GAAII,GAAOxB,EAAOQ,SAASY,EAC3B,OAAO,OAASI,EAAKX,EAAI,IAAMW,EAAKV,EAAI,IAAMU,EAAKT,EAAI,KAE3Df,EAAOyB,OAAO,WAAc,MAAOzB,GAAOC,OAAOyB,KAAQ,SAAUC,EAAUC,GACrED,IAAaC,IACb5B,EAAOC,OAAO4B,IAAM7B,EAAOmB,eAAenB,EAAOC,OAAOyB,QAGhE1B,EAAOyB,OAAO,WAAc,MAAOzB,GAAOC,OAAO4B,KAAQ,SAAUF,EAAUC,GACrED,IAAaC,IACb5B,EAAOC,OAAOyB,IAAM1B,EAAOuB,qBAAqBvB,EAAOC,OAAO4B,QAK1E,MADA9B,GAAmB+B,SAAW,UACvB/B,IAEXH,GAAIG,mBAAqBA,EACzBgC,QACKC,OAAO,8BACPC,WAAW,gBAAiBlC,IAClCH,MAAQA","file":"utils/colorsConverterTS.min.js","sourcesContent":["/// <reference path=\"../../Scripts/typings/angularjs/angular.d.ts\"   />\n/// <reference path=\"../../TypeScript/Commons/Commons.ts\"   />\nvar app;\n(function (app) {\n    \"use strict\";\n    var ColorsString = Commons.ColorsString;\n    var ColorConverterCtrl = (function () {\n        function ColorConverterCtrl($scope) {\n            $scope.Colors = new ColorsString(\"#000000\", \"rgb(0,0,0)\");\n            $scope.rgbToHex = function (red, green, blue) {\n                return \"#\" + ((1 << 24) + (red << 16) + (green << 8) + blue).toString(16).slice(1);\n            };\n            $scope.hexToRgb = function (hex) {\n                var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n                hex = hex.replace(shorthandRegex, function (m, r, g, b) {\n                    return r + r + g + g + b + b;\n                });\n                var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n                return result ? {\n                    r: parseInt(result[1], 16),\n                    g: parseInt(result[2], 16),\n                    b: parseInt(result[3], 16)\n                } : null;\n            };\n            $scope.rgbStringToHex = function (str) {\n                var splitResult = str.slice(0, -1).split(\"(\")[1].split(\",\");\n                return $scope.rgbToHex(parseInt(splitResult[0]), parseInt(splitResult[1]), parseInt(splitResult[2]));\n            };\n            $scope.hexStringToRgbString = function (str) {\n                var temp = $scope.hexToRgb(str);\n                return \"rgb(\" + temp.r + \",\" + temp.g + \",\" + temp.b + \")\";\n            };\n            $scope.$watch(function () { return $scope.Colors.RGB; }, function (newValue, oldValue) {\n                if (newValue !== oldValue) {\n                    $scope.Colors.HEX = $scope.rgbStringToHex($scope.Colors.RGB);\n                }\n            });\n            $scope.$watch(function () { return $scope.Colors.HEX; }, function (newValue, oldValue) {\n                if (newValue !== oldValue) {\n                    $scope.Colors.RGB = $scope.hexStringToRgbString($scope.Colors.HEX);\n                }\n            });\n        }\n        ColorConverterCtrl.$inject = ['$scope'];\n        return ColorConverterCtrl;\n    }());\n    app.ColorConverterCtrl = ColorConverterCtrl;\n    angular\n        .module('lnnowak.ColorsConverter', [])\n        .controller('ConverterCtrl', ColorConverterCtrl);\n})(app || (app = {}));\n;\n"],"sourceRoot":"/source/"}