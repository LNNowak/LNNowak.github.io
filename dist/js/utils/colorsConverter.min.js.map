{"version":3,"sources":["utils/colorsConverter.js"],"names":["app","angular","module","controller","$scope","colors","rgb","hex","rgbToHex","r","g","b","toString","slice","hexToRgb","shorthandRegex","replace","m","result","exec","parseInt","rgbStringToHex","str","splitResult","split","hexStringToRgbString","temp","rgbOnChange","hexOnChange"],"mappings":"AAAA,YAEA,IAAIA,KAAMC,QAAQC,OAAO,6BAEzBF,KACKG,WAAW,iBAAkB,SAAU,SAAUC,GAC9CA,EAAOC,QACHC,IAAK,aACLC,IAAK,WAGTH,EAAOI,SAAW,SAASC,EAAGC,EAAGC,GAC7B,MAAO,MAAQ,GAAK,KAAOF,GAAK,KAAOC,GAAK,GAAKC,GAAGC,SAAS,IAAIC,MAAM,IAG3ET,EAAOU,SAAW,SAASP,GACvB,GAAIQ,GAAiB,kCACrBR,GAAMA,EAAIS,QAAQD,EAAgB,SAAUE,EAAGR,EAAGC,EAAGC,GACjD,MAAOF,GAAIA,EAAIC,EAAIA,EAAIC,EAAIA,GAG/B,IAAIO,GAAS,4CAA4CC,KAAKZ,EAC9D,OAAOW,IACHT,EAAGW,SAASF,EAAO,GAAI,IACvBR,EAAGU,SAASF,EAAO,GAAI,IACvBP,EAAGS,SAASF,EAAO,GAAI,KACvB,MAGRd,EAAOiB,eAAiB,SAASC,GAC7B,GAAIC,GAAcD,EAAIT,MAAM,EAAG,IAAIW,MAAM,KAAK,GAAGA,MAAM,IACvD,OAAOpB,GAAOI,SAASY,SAASG,EAAY,IAAKH,SAASG,EAAY,IAAKH,SAASG,EAAY,MAGpGnB,EAAOqB,qBAAuB,SAASH,GACnC,GAAII,GAAOtB,EAAOU,SAASQ,EAC3B,OAAO,OAASI,EAAKjB,EAAI,IAAMiB,EAAKhB,EAAI,IAAMgB,EAAKf,EAAI,KAG3DP,EAAOuB,YAAc,WACjBvB,EAAOC,OAAOE,IAAMH,EAAOiB,eAAejB,EAAOC,OAAOC,MAG5DF,EAAOwB,YAAc,WACjBxB,EAAOC,OAAOC,IAAMF,EAAOqB,qBAAqBrB,EAAOC,OAAOE","file":"utils/colorsConverter.min.js","sourcesContent":["\"use strict\";\n\nvar app = angular.module(\"lnnowak.colorsConverter\", []);\n\napp\n    .controller(\"converterCtrl\", [\"$scope\", function ($scope) {\n        $scope.colors = {\n            rgb: \"rgb(0,0,0)\",\n            hex: \"#000000\"\n        };\n\n        $scope.rgbToHex = function(r, g, b) {\n            return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n        };\n\n        $scope.hexToRgb = function(hex) {\n            var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n            hex = hex.replace(shorthandRegex, function (m, r, g, b) {\n                return r + r + g + g + b + b;\n            });\n\n            var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n            return result ? {\n                r: parseInt(result[1], 16),\n                g: parseInt(result[2], 16),\n                b: parseInt(result[3], 16)\n            } : null;\n        };\n\n        $scope.rgbStringToHex = function(str) {\n            var splitResult = str.slice(0, -1).split(\"(\")[1].split(\",\");\n            return $scope.rgbToHex(parseInt(splitResult[0]), parseInt(splitResult[1]), parseInt(splitResult[2]));\n        };\n\n        $scope.hexStringToRgbString = function(str) {\n            var temp = $scope.hexToRgb(str);\n            return \"rgb(\" + temp.r + \",\" + temp.g + \",\" + temp.b + \")\";\n        };\n\n        $scope.rgbOnChange = function() {\n            $scope.colors.hex = $scope.rgbStringToHex($scope.colors.rgb);\n        };\n\n        $scope.hexOnChange = function() {\n            $scope.colors.rgb = $scope.hexStringToRgbString($scope.colors.hex);\n        };\n    }]);"],"sourceRoot":"/source/"}